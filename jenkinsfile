pipeline {
    agent any
    environment {
        // Define environment variables
        image1 = "${BUILD_NUMBER}"
        image2 = new Date().format("yyyyMMdd")
        image3 = "Latest"
    }

    stages {
        stage('source code pull from github') {
            steps {
                git branch: 'main', url: 'https://github.com/imrezaulkrm/nodejs.git'
            }
        }

        stage('build number tag') {
            steps {
                sh "docker build -t imrezaulkrm/nodejs:${image1} -f Dockerfile ."
                sh "docker run -d -p 3010:3000 imrezaulkrm/nodejs:${image1}"
            }
        }

        stage('todays date tag') {
            steps {
                sh "docker build -t imrezaulkrm/nodejs:${image2} -f Dockerfile ."
                sh "docker run -d -p 3020:3000 imrezaulkrm/nodejs:${image2}"
            }
        }

        stage('just latest tag') {
            steps {
                sh "docker build -t imrezaulkrm/nodejs:${image3} -f Dockerfile ."
                sh "docker run -d -p 3030:3000 imrezaulkrm/nodejs:${image3}"
            }
        }

        stage('login+push+logout') {
            steps {
                    withCredentials([usernamePassword(credentialsId: 'Dockerhub', passwordVariable: 'pass', usernameVariable: 'user')]) {
                    sh 'docker login -u ${user} -p ${pass}'
                    
                    sh 'docker push imrezaulkrm/nodejs:${image1}'
                    sh 'docker push imrezaulkrm/nodejs:${image2}'
                    sh 'docker push imrezaulkrm/nodejs:${image3}'

                    sh 'docker logout'
                }
            }
        }
        

        
        stage('email notification') {
            steps {
                emailext body: 'challege complete', subject: 'jenkins', to: 'sayem010ahmed@gmail.com'
            }
        }
    }

    post {
        always {
            script {
                // Stop and remove Docker containers
                sh 'docker stop imrezaulkrm/nodejs:${image1}'  // Use "|| true" to prevent failures if the container doesn't exist
                sh 'docker rm imrezaulkrm/nodejs:${image1}'

                sh 'docker stop imrezaulkrm/nodejs:${image2}'
                sh 'docker rm imrezaulkrm/nodejs:${image2}'

                sh 'docker stop imrezaulkrm/nodejs:${image3}'
                sh 'docker rm imrezaulkrm/nodejs:${image3}'

                // Remove Docker images
                sh 'docker rmi imrezaulkrm/nodejs:${image1}'
                sh 'docker rmi imrezaulkrm/nodejs:${image2}'
                sh 'docker rmi imrezaulkrm/nodejs:${image3}'
            }
        }
    }
}
